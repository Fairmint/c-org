{
  "contractName": "SqrtMock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        }
      ],
      "name": "sqrt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.14+commit.01f1aaa4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"sqrt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{},\"title\":\"Used for testing only.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/nick/git/c-org/contracts/test-artifacts/SqrtMock.sol\":\"SqrtMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/nick/git/c-org/contracts/math/Sqrt.sol\":{\"keccak256\":\"0x9965a26c9c9d092eb1abce4ba4a5f4d0651392d78421c2f92624739a5e46404a\",\"urls\":[\"bzz-raw://24f603bd39401620a0b1e9b0517ddf2261087fb57bcc67dcc08b2fea5d279848\",\"dweb:/ipfs/QmYdEtHx5jA3GZdv1qzy34CdEVzugU9fiLUwGH6mnea7V7\"]},\"/home/nick/git/c-org/contracts/test-artifacts/SqrtMock.sol\":{\"keccak256\":\"0xc2db7faf7a13c5affb17bcba104d87e6bb95bdcfc71c4782418f31ba17df1e1d\",\"urls\":[\"bzz-raw://887d1dde924266ecdc3f151628ec04ae3f13f8cfc1ea39757cabd7bb8daee4d8\",\"dweb:/ipfs/QmSgeyuEkm74iUCFSz1NpPh5MkP7dB2M1ZHCV1nSBrUNSv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061010d806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063677342ce14602d575b600080fd5b604760048036036020811015604157600080fd5b50356059565b60408051918252519081900360200190f35b6000606282606a565b90505b919050565b6000816077575060006065565b600382116085575060016065565b60001982141560a457506fffffffffffffffffffffffffffffffff6065565b5080600260018201045b8181101560d25780915060028182858160c357fe5b04018160cb57fe5b04905060ae565b5091905056fea265627a7a7231582097038fc4a5344036d97edaa96df8e5cf93ba38acfbd47e564fdc76cedd4e945064736f6c634300050e0032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063677342ce14602d575b600080fd5b604760048036036020811015604157600080fd5b50356059565b60408051918252519081900360200190f35b6000606282606a565b90505b919050565b6000816077575060006065565b600382116085575060016065565b60001982141560a457506fffffffffffffffffffffffffffffffff6065565b5080600260018201045b8181101560d25780915060028182858160c357fe5b04018160cb57fe5b04905060ae565b5091905056fea265627a7a7231582097038fc4a5344036d97edaa96df8e5cf93ba38acfbd47e564fdc76cedd4e945064736f6c634300050e0032",
  "sourceMap": "95:119:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:119:10;;;;;;;",
  "deployedSourceMap": "95:119:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:119:10;;;;;;;;;;;;;;;;;;;117:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;117:95:10;;:::i;:::-;;;;;;;;;;;;;;;;;172:6;195:12;205:1;195:9;:12::i;:::-;188:19;;117:95;;;;:::o;285:383:6:-;342:6;362;358:198;;-1:-1:-1;389:1:6;382:8;;358:198;416:1;411;:6;407:149;;-1:-1:-1;438:1:6;431:8;;407:149;-1:-1:-1;;460:1:6;:13;456:100;;;-1:-1:-1;539:10:6;532:17;;456:100;-1:-1:-1;572:5:6;581:1;576;572:5;;571:11;599:65;610:1;606;:5;599:65;;;629:1;625:5;;656:1;651;647;643;:5;;;;;;:9;642:15;;;;;;638:19;;599:65;;;285:383;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n\nimport \"../math/Sqrt.sol\";\n\n/**\n * @title Used for testing only.\n */\ncontract SqrtMock\n{\n  function sqrt(\n    uint x\n  ) public pure\n    returns (uint y)\n  {\n    return Sqrt.sqrt(x);\n  }\n}\n",
  "sourcePath": "/home/nick/git/c-org/contracts/test-artifacts/SqrtMock.sol",
  "ast": {
    "absolutePath": "/home/nick/git/c-org/contracts/test-artifacts/SqrtMock.sol",
    "exportedSymbols": {
      "SqrtMock": [
        2812
      ]
    },
    "id": 2813,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2797,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "/home/nick/git/c-org/contracts/math/Sqrt.sol",
        "file": "../math/Sqrt.sol",
        "id": 2798,
        "nodeType": "ImportDirective",
        "scope": 2813,
        "sourceUnit": 2655,
        "src": "26:26:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Used for testing only.",
        "fullyImplemented": true,
        "id": 2812,
        "linearizedBaseContracts": [
          2812
        ],
        "name": "SqrtMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2810,
              "nodeType": "Block",
              "src": "182:30:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2807,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2800,
                        "src": "205:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2805,
                        "name": "Sqrt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2654,
                        "src": "195:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Sqrt_$2654_$",
                          "typeString": "type(library Sqrt)"
                        }
                      },
                      "id": 2806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sqrt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2653,
                      "src": "195:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "195:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2804,
                  "id": 2809,
                  "nodeType": "Return",
                  "src": "188:19:10"
                }
              ]
            },
            "documentation": null,
            "id": 2811,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sqrt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2800,
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 2811,
                  "src": "136:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "130:16:10"
            },
            "returnParameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2803,
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "scope": 2811,
                  "src": "172:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2802,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:8:10"
            },
            "scope": 2812,
            "src": "117:95:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2813,
        "src": "95:119:10"
      }
    ],
    "src": "0:215:10"
  },
  "legacyAST": {
    "absolutePath": "/home/nick/git/c-org/contracts/test-artifacts/SqrtMock.sol",
    "exportedSymbols": {
      "SqrtMock": [
        2812
      ]
    },
    "id": 2813,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2797,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "/home/nick/git/c-org/contracts/math/Sqrt.sol",
        "file": "../math/Sqrt.sol",
        "id": 2798,
        "nodeType": "ImportDirective",
        "scope": 2813,
        "sourceUnit": 2655,
        "src": "26:26:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Used for testing only.",
        "fullyImplemented": true,
        "id": 2812,
        "linearizedBaseContracts": [
          2812
        ],
        "name": "SqrtMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2810,
              "nodeType": "Block",
              "src": "182:30:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2807,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2800,
                        "src": "205:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2805,
                        "name": "Sqrt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2654,
                        "src": "195:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Sqrt_$2654_$",
                          "typeString": "type(library Sqrt)"
                        }
                      },
                      "id": 2806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sqrt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2653,
                      "src": "195:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "195:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2804,
                  "id": 2809,
                  "nodeType": "Return",
                  "src": "188:19:10"
                }
              ]
            },
            "documentation": null,
            "id": 2811,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sqrt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2800,
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 2811,
                  "src": "136:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "130:16:10"
            },
            "returnParameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2803,
                  "name": "y",
                  "nodeType": "VariableDeclaration",
                  "scope": 2811,
                  "src": "172:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2802,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:8:10"
            },
            "scope": 2812,
            "src": "117:95:10",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2813,
        "src": "95:119:10"
      }
    ],
    "src": "0:215:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.14+commit.01f1aaa4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-09T20:14:07.415Z",
  "devdoc": {
    "methods": {},
    "title": "Used for testing only."
  },
  "userdoc": {
    "methods": {}
  }
}